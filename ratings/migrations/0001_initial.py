# Generated by Django 5.2.6 on 2025-10-19 23:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('movies', '0002_review'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RatingAggregate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('average_rating', models.FloatField(default=0.0)),
                ('total_ratings', models.IntegerField(default=0)),
                ('rating_1_count', models.IntegerField(default=0)),
                ('rating_2_count', models.IntegerField(default=0)),
                ('rating_3_count', models.IntegerField(default=0)),
                ('rating_4_count', models.IntegerField(default=0)),
                ('rating_5_count', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rating_aggregate', to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieRating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['movie', 'rating'], name='ratings_mov_movie_i_b79070_idx'), models.Index(fields=['user', 'created_at'], name='ratings_mov_user_id_b403b8_idx')],
                'unique_together': {('user', 'movie')},
            },
        ),
    ]
